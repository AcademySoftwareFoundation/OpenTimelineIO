# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: OpenTimelineIO

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [2.7, 3.6, 3.7]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[dev]
        sudo apt-get install cmake
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E,W,F --ignore=W503,W504 --show-source --statistics
        # exit-zero treats all errors as warnings.
        flake8 . --count --exit-zero --max-line-length=88 --statistics
    - name: Build and install
      run: |
        mkdir ${{ github.workspace }}/cxx-install-${{ matrix.python-version }}
        python setup.py install --cxx-install-root=${{ github.workspace }}/cxx-install-${{ matrix.python-version }}
    - name: Upload build artefacts
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: opentimelineio-${{ matrix.python-version }}
        path: ${{ github.workspace }}/cxx-install-${{ matrix.python-version }}
    - name: Test
      run: make test
    - name: Coverage
      run: make coverage
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./.coverage
        flags: unittests
        name: opentimelineio-codecov
        fail_ci_if_error: true
