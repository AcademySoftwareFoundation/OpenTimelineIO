# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: OpenTimelineIO

# for configuring which build will be a C++ coverage build / coverage report
env:
  GH_COV_PY: 3.7
  GH_COV_OS: ubuntu-latest

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [2.7, 3.7, 3.8]

    env:
      OTIO_CXX_COVERAGE_BUILD: ON
      OTIO_CXX_BUILD_TMP_DIR: ${{ github.workspace }}/build
      
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install coverage dependency
      if: matrix.python-version == env.GH_COV_PY && matrix.os == env.GH_COV_OS
      run: |
        sudo apt-get install lcov
    - name: Install python build dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel flake8>=3.5 check-manifest
    - name: Run check-manifest and lint check
      run: make ci-prebuild
    - name: Build and Install
      run: |
        # compile and install into virtualenv/virtual machine (verbosely)
        pip install .[dev] -v
    - name: Run tests w/ python coverage
      run: make ci-postbuild
    # (only on ubuntu/pyhton3.7)
    - name: Generate C++ coverage report
      if: matrix.python-version == env.GH_COV_PY && matrix.os == env.GH_COV_OS
      run: make lcov
    - name: Upload coverage to Codecov
      if: matrix.python-version == env.GH_COV_PY && matrix.os == env.GH_COV_OS
      uses: codecov/codecov-action@v1
      with:
        flags: unittests
        name: opentimelineio-codecov
        fail_ci_if_error: true
