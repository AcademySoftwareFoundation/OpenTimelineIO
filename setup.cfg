###############################################################################
# Python Distribution
###############################################################################
[metadata]
description-file = README.md

###############################################################################
# flake8
###############################################################################
[flake8]
exclude = 
    .tox
    *.egg
    build
    venv
    __pycache__
    docs
    dist
    .git
    deps
select = E,W,F
max-line-length = 88
# @TODO: for now, ignoring both line continuation before OR after binary
#        operators.  The pep8 style seems to have adopted the W504 style as
#        correct, which we've been doing conventionally but not 100% uniformly.
#        At some point in the future, we should remove W504 from this list and
#        conform all the continuation to be the same.
ignore =
    W503
    W504


###############################################################################
# Check-Manifest
###############################################################################
[check-manifest]
ignore =
    tests*
    requirements*
    contrib/opentimelineio_contrib/application_plugins
    contrib/opentimelineio_contrib/application_plugins/*
ignore-bad-ideas =
    *.egg-info
    *egg-info/*


###############################################################################
# Python Coverage
###############################################################################
[coverage:run]
branch = True
source = 
    opentimelineio
    opentimelineio_contrib
    ./tests

[coverage:paths]
otio = 
    src/py-opentimelineio/opentimelineio
    *site-packages/opentimelineio
contrib =
    contrib/opentimelineio_contrib
    *site-packages/opentimelineio_contrib

[coverage:report]
include =*
# Regexes for lines to exclude from consideration
omit = 
    *aaf2*
    *pkg_resources*
    *pbr*
    *mock*
    *PIL*
    *funcsigs*

exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain if tests don't hit defensive assertion code:
    # raise AssertionError
    # raise NotImplementedError

    # # Don't complain if non-runnable code isn't run:
    # if 0:
    # if __name__ == .__main__.:
ignore_errors = True
show_missing = True

[coverage:html]
directory = coverage_html_report
