/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class io_opentimeline_opentime_RationalTime */

#ifndef _Included_io_opentimeline_opentime_RationalTime
#define _Included_io_opentimeline_opentime_RationalTime
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     io_opentimeline_opentime_RationalTime
 * Method:    isInvalidTimeNative
 * Signature: (DD)Z
 */
JNIEXPORT jboolean JNICALL Java_io_opentimeline_opentime_RationalTime_isInvalidTimeNative
  (JNIEnv *, jclass, jdouble, jdouble);

/*
 * Class:     io_opentimeline_opentime_RationalTime
 * Method:    addNative
 * Signature: ([D[D)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_io_opentimeline_opentime_RationalTime_addNative
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

/*
 * Class:     io_opentimeline_opentime_RationalTime
 * Method:    subtractNative
 * Signature: ([D[D)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_io_opentimeline_opentime_RationalTime_subtractNative
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

/*
 * Class:     io_opentimeline_opentime_RationalTime
 * Method:    rescaledToNative
 * Signature: ([DD)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_io_opentimeline_opentime_RationalTime_rescaledToNative___3DD
  (JNIEnv *, jclass, jdoubleArray, jdouble);

/*
 * Class:     io_opentimeline_opentime_RationalTime
 * Method:    rescaledToNative
 * Signature: ([D[D)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_io_opentimeline_opentime_RationalTime_rescaledToNative___3D_3D
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

/*
 * Class:     io_opentimeline_opentime_RationalTime
 * Method:    valueRescaledToNative
 * Signature: ([DD)D
 */
JNIEXPORT jdouble JNICALL Java_io_opentimeline_opentime_RationalTime_valueRescaledToNative___3DD
  (JNIEnv *, jclass, jdoubleArray, jdouble);

/*
 * Class:     io_opentimeline_opentime_RationalTime
 * Method:    valueRescaledToNative
 * Signature: ([D[D)D
 */
JNIEXPORT jdouble JNICALL Java_io_opentimeline_opentime_RationalTime_valueRescaledToNative___3D_3D
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

/*
 * Class:     io_opentimeline_opentime_RationalTime
 * Method:    almostEqualNative
 * Signature: ([D[D)Z
 */
JNIEXPORT jboolean JNICALL Java_io_opentimeline_opentime_RationalTime_almostEqualNative___3D_3D
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

/*
 * Class:     io_opentimeline_opentime_RationalTime
 * Method:    almostEqualNative
 * Signature: ([D[DD)Z
 */
JNIEXPORT jboolean JNICALL Java_io_opentimeline_opentime_RationalTime_almostEqualNative___3D_3DD
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray, jdouble);

/*
 * Class:     io_opentimeline_opentime_RationalTime
 * Method:    durationFromStartEndTimeNative
 * Signature: ([D[D)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_io_opentimeline_opentime_RationalTime_durationFromStartEndTimeNative
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

/*
 * Class:     io_opentimeline_opentime_RationalTime
 * Method:    isValidTimecodeRate
 * Signature: (D)Z
 */
JNIEXPORT jboolean JNICALL Java_io_opentimeline_opentime_RationalTime_isValidTimecodeRate
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     io_opentimeline_opentime_RationalTime
 * Method:    fromTimecodeNative
 * Signature: (Ljava/lang/String;DLio/opentimeline/opentime/ErrorStatus;)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_io_opentimeline_opentime_RationalTime_fromTimecodeNative
  (JNIEnv *, jclass, jstring, jdouble, jobject);

/*
 * Class:     io_opentimeline_opentime_RationalTime
 * Method:    fromTimeStringNative
 * Signature: (Ljava/lang/String;DLio/opentimeline/opentime/ErrorStatus;)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_io_opentimeline_opentime_RationalTime_fromTimeStringNative
  (JNIEnv *, jclass, jstring, jdouble, jobject);

/*
 * Class:     io_opentimeline_opentime_RationalTime
 * Method:    toTimecodeNative
 * Signature: ([DDILio/opentimeline/opentime/ErrorStatus;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_io_opentimeline_opentime_RationalTime_toTimecodeNative
  (JNIEnv *, jclass, jdoubleArray, jdouble, jint, jobject);

/*
 * Class:     io_opentimeline_opentime_RationalTime
 * Method:    toTimeStringNative
 * Signature: ([D)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_io_opentimeline_opentime_RationalTime_toTimeStringNative
  (JNIEnv *, jclass, jdoubleArray);

/*
 * Class:     io_opentimeline_opentime_RationalTime
 * Method:    compareToNative
 * Signature: ([D[D)I
 */
JNIEXPORT jint JNICALL Java_io_opentimeline_opentime_RationalTime_compareToNative
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

#ifdef __cplusplus
}
#endif
#endif
