/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class io_opentimeline_opentime_TimeRange */

#ifndef _Included_io_opentimeline_opentime_TimeRange
#define _Included_io_opentimeline_opentime_TimeRange
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     io_opentimeline_opentime_TimeRange
 * Method:    endTimeInclusiveNative
 * Signature: ([D)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_io_opentimeline_opentime_TimeRange_endTimeInclusiveNative
  (JNIEnv *, jclass, jdoubleArray);

/*
 * Class:     io_opentimeline_opentime_TimeRange
 * Method:    endTimeExclusiveNative
 * Signature: ([D)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_io_opentimeline_opentime_TimeRange_endTimeExclusiveNative
  (JNIEnv *, jclass, jdoubleArray);

/*
 * Class:     io_opentimeline_opentime_TimeRange
 * Method:    durationExtendedByNative
 * Signature: ([D[D)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_io_opentimeline_opentime_TimeRange_durationExtendedByNative
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

/*
 * Class:     io_opentimeline_opentime_TimeRange
 * Method:    extendedByNative
 * Signature: ([D[D)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_io_opentimeline_opentime_TimeRange_extendedByNative
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

/*
 * Class:     io_opentimeline_opentime_TimeRange
 * Method:    clampedRationalTimeNative
 * Signature: ([D[D)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_io_opentimeline_opentime_TimeRange_clampedRationalTimeNative
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

/*
 * Class:     io_opentimeline_opentime_TimeRange
 * Method:    clampedTimeRangeNative
 * Signature: ([D[D)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_io_opentimeline_opentime_TimeRange_clampedTimeRangeNative
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

/*
 * Class:     io_opentimeline_opentime_TimeRange
 * Method:    containsRationalTimeNative
 * Signature: ([D[D)Z
 */
JNIEXPORT jboolean JNICALL Java_io_opentimeline_opentime_TimeRange_containsRationalTimeNative
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

/*
 * Class:     io_opentimeline_opentime_TimeRange
 * Method:    containsTimeRangeNative
 * Signature: ([D[D)Z
 */
JNIEXPORT jboolean JNICALL Java_io_opentimeline_opentime_TimeRange_containsTimeRangeNative
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

/*
 * Class:     io_opentimeline_opentime_TimeRange
 * Method:    overlapsRationalTimeNative
 * Signature: ([D[D)Z
 */
JNIEXPORT jboolean JNICALL Java_io_opentimeline_opentime_TimeRange_overlapsRationalTimeNative
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

/*
 * Class:     io_opentimeline_opentime_TimeRange
 * Method:    overlapsTimeRangeNative
 * Signature: ([D[DD)Z
 */
JNIEXPORT jboolean JNICALL Java_io_opentimeline_opentime_TimeRange_overlapsTimeRangeNative___3D_3DD
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray, jdouble);

/*
 * Class:     io_opentimeline_opentime_TimeRange
 * Method:    overlapsTimeRangeNative
 * Signature: ([D[D)Z
 */
JNIEXPORT jboolean JNICALL Java_io_opentimeline_opentime_TimeRange_overlapsTimeRangeNative___3D_3D
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

/*
 * Class:     io_opentimeline_opentime_TimeRange
 * Method:    beforeTimeRangeNative
 * Signature: ([D[DD)Z
 */
JNIEXPORT jboolean JNICALL Java_io_opentimeline_opentime_TimeRange_beforeTimeRangeNative___3D_3DD
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray, jdouble);

/*
 * Class:     io_opentimeline_opentime_TimeRange
 * Method:    beforeTimeRangeNative
 * Signature: ([D[D)Z
 */
JNIEXPORT jboolean JNICALL Java_io_opentimeline_opentime_TimeRange_beforeTimeRangeNative___3D_3D
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

/*
 * Class:     io_opentimeline_opentime_TimeRange
 * Method:    beforeRationalTimeNative
 * Signature: ([D[DD)Z
 */
JNIEXPORT jboolean JNICALL Java_io_opentimeline_opentime_TimeRange_beforeRationalTimeNative___3D_3DD
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray, jdouble);

/*
 * Class:     io_opentimeline_opentime_TimeRange
 * Method:    beforeRationalTimeNative
 * Signature: ([D[D)Z
 */
JNIEXPORT jboolean JNICALL Java_io_opentimeline_opentime_TimeRange_beforeRationalTimeNative___3D_3D
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

/*
 * Class:     io_opentimeline_opentime_TimeRange
 * Method:    meetsNative
 * Signature: ([D[DD)Z
 */
JNIEXPORT jboolean JNICALL Java_io_opentimeline_opentime_TimeRange_meetsNative___3D_3DD
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray, jdouble);

/*
 * Class:     io_opentimeline_opentime_TimeRange
 * Method:    meetsNative
 * Signature: ([D[D)Z
 */
JNIEXPORT jboolean JNICALL Java_io_opentimeline_opentime_TimeRange_meetsNative___3D_3D
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

/*
 * Class:     io_opentimeline_opentime_TimeRange
 * Method:    beginsTimeRangeNative
 * Signature: ([D[DD)Z
 */
JNIEXPORT jboolean JNICALL Java_io_opentimeline_opentime_TimeRange_beginsTimeRangeNative___3D_3DD
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray, jdouble);

/*
 * Class:     io_opentimeline_opentime_TimeRange
 * Method:    beginsTimeRangeNative
 * Signature: ([D[D)Z
 */
JNIEXPORT jboolean JNICALL Java_io_opentimeline_opentime_TimeRange_beginsTimeRangeNative___3D_3D
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

/*
 * Class:     io_opentimeline_opentime_TimeRange
 * Method:    beginsRationalTimeNative
 * Signature: ([D[DD)Z
 */
JNIEXPORT jboolean JNICALL Java_io_opentimeline_opentime_TimeRange_beginsRationalTimeNative___3D_3DD
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray, jdouble);

/*
 * Class:     io_opentimeline_opentime_TimeRange
 * Method:    beginsRationalTimeNative
 * Signature: ([D[D)Z
 */
JNIEXPORT jboolean JNICALL Java_io_opentimeline_opentime_TimeRange_beginsRationalTimeNative___3D_3D
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

/*
 * Class:     io_opentimeline_opentime_TimeRange
 * Method:    finishesTimeRangeNative
 * Signature: ([D[DD)Z
 */
JNIEXPORT jboolean JNICALL Java_io_opentimeline_opentime_TimeRange_finishesTimeRangeNative___3D_3DD
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray, jdouble);

/*
 * Class:     io_opentimeline_opentime_TimeRange
 * Method:    finishesTimeRangeNative
 * Signature: ([D[D)Z
 */
JNIEXPORT jboolean JNICALL Java_io_opentimeline_opentime_TimeRange_finishesTimeRangeNative___3D_3D
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

/*
 * Class:     io_opentimeline_opentime_TimeRange
 * Method:    finishesRationalTimeNative
 * Signature: ([D[DD)Z
 */
JNIEXPORT jboolean JNICALL Java_io_opentimeline_opentime_TimeRange_finishesRationalTimeNative___3D_3DD
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray, jdouble);

/*
 * Class:     io_opentimeline_opentime_TimeRange
 * Method:    finishesRationalTimeNative
 * Signature: ([D[D)Z
 */
JNIEXPORT jboolean JNICALL Java_io_opentimeline_opentime_TimeRange_finishesRationalTimeNative___3D_3D
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

/*
 * Class:     io_opentimeline_opentime_TimeRange
 * Method:    equalsNative
 * Signature: ([D[D)Z
 */
JNIEXPORT jboolean JNICALL Java_io_opentimeline_opentime_TimeRange_equalsNative
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

/*
 * Class:     io_opentimeline_opentime_TimeRange
 * Method:    notEqualsNative
 * Signature: ([D[D)Z
 */
JNIEXPORT jboolean JNICALL Java_io_opentimeline_opentime_TimeRange_notEqualsNative
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

/*
 * Class:     io_opentimeline_opentime_TimeRange
 * Method:    rangeFromStartEndTimeNative
 * Signature: ([D[D)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_io_opentimeline_opentime_TimeRange_rangeFromStartEndTimeNative
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray);

#ifdef __cplusplus
}
#endif
#endif
