[tox]
envlist = clean,py27,py35,py36,stats
skip_missing_interpreters = true

[flake8]
exclude = .tox,*.egg,build,venv,__pycache__,docs,dist,.git,
select = E,W,F
max-line-length = 88
# @TODO: for now, ignoring both line continuation before OR after binary
#        operators.  The pep8 style seems to have adopted the W504 style as
#        correct, which we've been doing conventionally but not 100% uniformly.
#        At some point in the future, we should remove W504 from this list and
#        conform all the conitnuation to be the same.
ignore=W503,W504

[testenv]
dir_for_source = {toxworkdir}/build-{envname}
# @TODO: these dependencies are redundantly listed in setup.py
deps =
    coverage 
    check-manifest 
    flake8 
    Pillow 
    mock
    pyaaf2==1.2.0
# if you don't skip install, there isn't a way to specify different build instructions for your package vs the dependencies.
skip_install=true
# this ensures that the '.gcno' files are not removed by pip so that code coverage can be computed correctly.
commands_pre=
    # remove any old cmakecache file just in case
    rm -f {[testenv]dir_for_source}/CMakeCache.txt    
    # build with magical working build options
    pip install --no-clean --global-option=build_ext --global-option="-t{[testenv]dir_for_source}" --global-option=build_ext --global-option="--cxx-coverage" -v .
whitelist_externals=
    rm 
    lcov
commands =
    check-manifest --ignore tox.ini,tests*,requirements* --ignore-bad-ideas *.egg-info,*egg-info/*
    flake8 opentimelineio
    coverage run -a --source=opentimelineio -m unittest discover tests -vvv
    coverage run -a --source=contrib/opentimelineio_contrib/adapters -m unittest discover contrib/opentimelineio_contrib/adapters/tests -vvv
    coverage report --include=* -m 
    lcov --capture --directory {[testenv]dir_for_source} --output-file {[testenv]dir_for_source}/coverage.info -q
    # remove dependency files
    lcov --remove {[testenv]dir_for_source}/coverage.info '/usr/*' --output-file {[testenv]dir_for_source}/coverage.info  -q
    lcov --remove {[testenv]dir_for_source}/coverage.info '*/deps/*' --output-file {toxinidir}/coverage.info -q
    lcov --list {toxinidir}/coverage.info # debug info
